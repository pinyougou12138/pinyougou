<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd">

    <security:http pattern="/plugins/**" security="none"></security:http>
    <security:http pattern="/css/**" security="none"></security:http>
    <security:http pattern="/data/**" security="none"></security:http>
    <security:http pattern="/fonts/**" security="none"></security:http>
    <security:http pattern="/js/**" security="none"></security:http>
    <security:http pattern="/img/**" security="none"></security:http>
    <security:http pattern="/seckill-*.html" security="none"></security:http>
    <security:http pattern="/seckillGoods/*.shtml" security="none"></security:http>

    <!--   entry-point-ref  入口点引用 -->
    <security:http use-expressions="false" entry-point-ref="casAuthenticationEntryPoint">
        <security:intercept-url pattern="/**" access="ROLE_USER"></security:intercept-url>
        <security:intercept-url pattern="/favicon.ico" access="IS_AUTHENTICATED_ANONYMOUSLY"></security:intercept-url>
        <security:csrf disabled="true"></security:csrf>
        <!-- custom-filter为过滤器， position 表示将过滤器放在指定的位置上，before表示放在指定位置之前  ，after表示放在指定的位置之后  -->
        <security:custom-filter ref="casAuthenticationFilter" position="CAS_FILTER"></security:custom-filter>
        <security:custom-filter ref="requestSingleLogoutFilter" before="LOGOUT_FILTER"></security:custom-filter>
        <security:custom-filter ref="singleSignOutFilter" before="CAS_FILTER"></security:custom-filter>
    </security:http>

    <!--CAS入口点 开始-->
    <bean class="org.springframework.security.cas.web.CasAuthenticationEntryPoint" id="casAuthenticationEntryPoint">
        <!--单点登陆服务器url-->
        <property name="loginUrl" value="http://localhost:8080/cas/login"></property>
        <property name="serviceProperties" ref="serviceProperties"></property>
    </bean>

    <bean class="org.springframework.security.cas.ServiceProperties" id="serviceProperties">
        <!--service配置自身工程的跟地址+/login/cas-->
        <property name="service" value="http://localhost:9107/login/cas"></property>
    </bean>
    <!--CAS入口点结束-->

    <!--认证过滤器 开始-->
    <bean class="org.springframework.security.cas.web.CasAuthenticationFilter" id="casAuthenticationFilter">
        <property name="authenticationManager" ref="authenticationManager"></property>
    </bean>
    <!--认证管理器-->
    <security:authentication-manager alias="authenticationManager">
        <security:authentication-provider ref="casAuthenticationProvider">

        </security:authentication-provider>
    </security:authentication-manager>
    <!--认证提供者-->
    <bean class="org.springframework.security.cas.authentication.CasAuthenticationProvider" id="casAuthenticationProvider">
        <property name="authenticationUserDetailsService">
            <bean class="org.springframework.security.core.userdetails.UserDetailsByNameServiceWrapper">
                <constructor-arg ref="userDetailsService"></constructor-arg>
            </bean>
        </property>
        <property name="serviceProperties" ref="serviceProperties"></property>
        <!--ticketValidator 为票据验证器-->
        <property name="ticketValidator">
            <bean class="org.jasig.cas.client.validation.Cas20ServiceTicketValidator">
                <constructor-arg index="0" value="http://localhost:8080/cas"></constructor-arg>
            </bean>
        </property>
        <property name="key" value="an_id_for_this_auth_provider_only"></property>
    </bean>
    <!--认证类 只做权限的认证-->
    <bean id="userDetailsService" class="com.pinyougou.cart.security.UserDetailsServiceImpl"/>
    <!--认证过滤器结束-->

    <!--单点登陆 开始-->
    <bean class="org.jasig.cas.client.session.SingleSignOutFilter" id="singleSignOutFilter"></bean>
    <bean class="org.springframework.security.web.authentication.logout.LogoutFilter" id="requestSingleLogoutFilter">
        <constructor-arg value="http://localhost:8080/cas/logout?service=http://www.baidu.com"></constructor-arg>
        <constructor-arg>
            <bean class="org.springframework.security.web.authentication.logout.SecurityContextLogoutHandler"></bean>
        </constructor-arg>
        <!--就是在本地写上，<a href="/logout/cas">  就会 将本身自己(-client3)的session清除,通知 CAS服务器也登出，cas服务器还需要将全部关联的client都登出-->
        <property name="filterProcessesUrl" value="/logout/cas"></property>
    </bean>
    <!--单点登陆结束-->
</beans>